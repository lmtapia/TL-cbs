initialise-binding finalise-failing scope
  (collateral
     (bind
        ("fact",
         allocate-variable functions
           (tuples
              ((values)*),
            values))),
   handle-return sequential
     (assign
        (bound
           ("fact"),
         function closure scope
           (collateral
              (( ),
               match
                 (given,
                  tuple
                    (pattern closure
                       (bind
                          ("n",
                           allocate-initialised-variable
                             (values,
                              given)))))),
            give
              (handle-return sequential
                 (if-else
                    (is-greater
                       (assigned bound
                          "n",
                        decimal-natural "1"),
                     sequential
                       (int-mul
                          (assigned bound
                             "n",
                           apply
                             (assigned bound
                                "fact",
                              tuple
                                (int-add
                                   (assigned bound
                                      "n",
                                    int-neg
                                      (decimal-natural "1")))))),
                     sequential
                       (decimal-natural "1"))),
               sequential
                 (recycle-variables bound-directly
                    ("n"),
                  null-value,
                  given)))),
      effect
        (apply
           (assigned bound
              "fact",
            tuple
              (read))),
      apply
        (assigned bound
           "fact",
         tuple
           (read))))