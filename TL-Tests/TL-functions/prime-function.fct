initialise-binding finalise-failing scope
  (collateral
     (bind
        ("prime",
         allocate-variable functions
           (tuples
              ((values)*),
            values))),
   sequential
     (assign
        (bound
           ("prime"),
         function closure scope
           (match
              (given,
               tuple
                 (pattern closure
                    (bind
                       ("x",
                        allocate-initialised-variable
                          (values,
                           given))),
                  pattern closure
                    (bind
                       ("div",
                        allocate-initialised-variable
                          (values,
                           given))))),
            give
              (handle-return sequential
                 (effect
                    (last while-values
                       (not is-eq
                          (int-mul
                             (checked int-div
                                (assigned bound
                                   "x",
                                 assigned bound
                                   "div"),
                              assigned bound
                                "div"),
                           assigned bound
                             "x"),
                        assign
                          (bound
                             ("div"),
                           int-add
                             (assigned bound
                                "div",
                              decimal-natural "1")))),
                  if-else
                    (if-else
                       (is-eq
                          (int-mul
                             (assigned bound
                                "div",
                              assigned bound
                                "div"),
                           assigned bound
                             "x"),
                        true,
                        is-greater
                          (int-mul
                             (assigned bound
                                "div",
                              assigned bound
                                "div"),
                           assigned bound
                             "x")),
                     print
                       (to-string true,
                        "
"),
                     print
                       (to-string false,
                        "
"))),
               sequential
                 (recycle-variables bound-directly
                    ("x"),
                  recycle-variables bound-directly
                    ("div"),
                  given)))),
      effect
        (apply
           (assigned bound
              "prime",
            tuple
              (decimal-natural "17",
               decimal-natural "2"))),
      effect
        (apply
           (assigned bound
              "prime",
            tuple
              (decimal-natural "83",
               decimal-natural "2"))),
      effect
        (apply
           (assigned bound
              "prime",
            tuple
              (decimal-natural "71",
               decimal-natural "2"))),
      apply
        (assigned bound
           "prime",
         tuple
           (decimal-natural "169",
            decimal-natural "2"))))